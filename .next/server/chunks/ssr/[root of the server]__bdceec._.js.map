{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ttigg/Documents/GitHub/TestWeb/src/data/monitoring-data.js"],"sourcesContent":["'use client'\r\n\r\nimport { initializeApp } from 'firebase/app';\r\nimport { getDatabase, ref, onValue, query, orderByKey, limitToLast } from 'firebase/database';\r\nimport { useState, useEffect } from 'react';\r\n\r\n// Firebase configuration (ใช้ project เดียว)\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBqd5rgKGkO7h_Dn76ctkITkgkrvnV5tbE\",\r\n  authDomain: \"ultrafine-particles.firebaseapp.com\",\r\n  databaseURL: \"https://ultrafine-particles-default-rtdb.asia-southeast1.firebasedatabase.app\",\r\n  projectId: \"ultrafine-particles\",\r\n  storageBucket: \"ultrafine-particles.firebasestorage.app\",\r\n  messagingSenderId: \"231538011955\",\r\n  appId: \"1:231538011955:web:274e36a3c702324dc31846\",\r\n  measurementId: \"G-KBQLGTKY0V\"\r\n};\r\n\r\n// Initialize Firebase (ใช้ project เดียว)\r\nconst app = initializeApp(firebaseConfig);\r\nconst database = getDatabase(app);\r\n\r\n// Constants\r\nconst FIREBASE_USER_ID = 'gdRueJtWeNaMleXbEf4rWfuD6Kr1';\r\nconst PIERA_PATH = 'Piera/';\r\nconst RAW_PATH = 'RAWdata/';\r\n\r\n// Helper functions - ปรับให้ใช้ local time\r\nconst getCurrentDatePath = () => {\r\n  // ใช้ local time แทน UTC\r\n  const date = new Date();\r\n  const year = date.getFullYear();\r\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\r\n  const day = date.getDate().toString().padStart(2, '0');\r\n  return `${year}-${month}-${day}`;\r\n};\r\n\r\nconst getCurrentTime = () => {\r\n  // ใช้ local time แทน UTC\r\n  const date = new Date();\r\n  const hours = date.getHours().toString().padStart(2, '0');\r\n  const minutes = date.getMinutes().toString().padStart(2, '0');\r\n  const seconds = date.getSeconds().toString().padStart(2, '0');\r\n  return `${hours}:${minutes}:${seconds}`;\r\n};\r\n\r\nconst formatDisplayDate = (date) => {\r\n  // รับ Date object หรือสร้างใหม่ถ้าไม่มี\r\n  const targetDate = date || new Date();\r\n  const month = (targetDate.getMonth() + 1).toString().padStart(2, '0');\r\n  const day = targetDate.getDate().toString().padStart(2, '0');\r\n  const year = targetDate.getFullYear();\r\n  return `${month}/${day}/${year}`;\r\n};\r\n\r\n// PM thresholds and color functions\r\nexport const getAirQualityColor = (status) => {\r\n  const colors = {\r\n    Excellent: '#1E88E5',\r\n    Good: '#2DC653',\r\n    Moderate: '#FECF3E',\r\n    Unhealthy: '#FF9500',\r\n    Hazardous: '#D02224'\r\n  };\r\n  return colors[status] || colors.Moderate;\r\n};\r\n\r\nexport const formatPMValue = (value) => {\r\n  const numericValue = parseFloat(value);\r\n  if (isNaN(numericValue)) return value;\r\n  return `${numericValue.toFixed(2)} μg/m³`;\r\n};\r\n\r\n// ฟังก์ชันสำหรับเลือกไอคอนตามเนื้อหาคำแนะนำ\r\nexport const getRecommendationIcon = (recommendation) => {\r\n  // ตรวจสอบว่า recommendation เป็น string หรือไม่\r\n  if (!recommendation || typeof recommendation !== 'string') {\r\n    return '•';\r\n  }\r\n\r\n  // ตรวจสอบคำหลักในคำแนะนำและส่งคืนไอคอนที่เหมาะสม\r\n  const text = recommendation.toLowerCase();\r\n\r\n  // ไอคอนสำหรับสุขภาพและอาการ\r\n  if (text.includes('ไม่มีผลต่อสุขภาพ')) {\r\n    return '💚';\r\n  }\r\n\r\n  // ไอคอนสำหรับการใช้ชีวิตปกติ\r\n  if (text.includes('ใช้ชีวิตได้ตามปกติ')) {\r\n    return '😊';\r\n  }\r\n\r\n  // ไอคอนสำหรับการเปิดหน้าต่างระบายอากาศ\r\n  if (text.includes('เปิดหน้าต่างระบายอากาศ')) {\r\n    return '🪟';\r\n  }\r\n\r\n  // ไอคอนสำหรับการปิดหน้าต่าง\r\n  if (text.includes('ปิดหน้าต่าง')) {\r\n    return '🚪';\r\n  }\r\n\r\n  // ไอคอนสำหรับการหลีกเลี่ยงกิจกรรมที่ก่อให้เกิดฝุ่น\r\n  if (text.includes('หลีกเลี่ยงการทำกิจกรรมที่ก่อให้เกิดฝุ่น')) {\r\n    return '🚫';\r\n  }\r\n\r\n  // ไอคอนสำหรับการงดกิจกรรมหรือเข้าใกล้พื้นที่ที่มีฝุ่น\r\n  if (text.includes('งดการทำกิจกรรมหรือเข้าใกล้พื้นที่ที่มีฝุ่น')) {\r\n    return '🛑';\r\n  }\r\n\r\n  // ไอคอนสำหรับกลุ่มเปราะบาง (รวมการสังเกตอาการ)\r\n  if (text.includes('กลุ่มเปราะบาง') && text.includes('สังเกตอาการ')) {\r\n    return '⚠️';\r\n  }\r\n\r\n  // ไอคอนสำหรับกลุ่มคนทั่วไป (รวมการสังเกตอาการ)\r\n  if (text.includes('กลุ่มคนทั่วไป') && text.includes('สังเกตอาการ')) {\r\n    return '👁️';\r\n  }\r\n\r\n  // ไอคอนสำหรับความเสี่ยงสูง\r\n  if (text.includes('ความเสี่ยงสูง')) {\r\n    return '🔴';\r\n  }\r\n\r\n  // ไอคอนสำหรับยาและอุปกรณ์การแพทย์\r\n  if (text.includes('เตรียมยาหรืออุปกรณ์ตามคำสั่งแพทย์')) {\r\n    return '💊';\r\n  }\r\n\r\n  // ไอคอนสำหรับเครื่องฟอกอากาศ\r\n  if (text.includes('ติดตั้งเครื่องฟอกอากาศ')) {\r\n    return '🌬️';\r\n  }\r\n\r\n  // ไอคอนสำหรับการสังเกตอาการและไปพบแพทย์\r\n  if (text.includes('สังเกตอาการของตนเอง หากมีอาการให้ไปพบแพทย์')) {\r\n    return '🏥';\r\n  }\r\n\r\n  // ไอคอนสำหรับการโหลดข้อมูล\r\n  if (text.includes('กำลังโหลด') || text.includes('กำลังวิเคราะห์') || text.includes('กำลังประมวลผล')) {\r\n    return '⏳';\r\n  }\r\n\r\n  // ไอคอนเริ่มต้น\r\n  return '•';\r\n};\r\n\r\nexport const PM_THRESHOLDS = {\r\n  PM01: {\r\n    Excellent: 0.0,\r\n    Good: 0.5,\r\n    moderate: 1.0,\r\n    unhealthy: 2.0,\r\n    Hazardous: Number.MAX_VALUE\r\n  },\r\n  PM25: {\r\n    Excellent: 15.0,\r\n    Good: 25.0,\r\n    moderate: 37.5,\r\n    unhealthy: 75.0,\r\n    Hazardous: Number.MAX_VALUE\r\n  },\r\n  PM100: {\r\n    Excellent: 50.0,\r\n    Good: 80.0,\r\n    moderate: 120.0,\r\n    unhealthy: 180.0,\r\n    Hazardous: Number.MAX_VALUE\r\n  }\r\n};\r\n\r\nconst determineAirQuality = (pm01, pm25, pm100) => {\r\n  // Check Excellent\r\n  if (pm01 <= PM_THRESHOLDS.PM01.Excellent &&\r\n    pm25 <= PM_THRESHOLDS.PM25.Excellent &&\r\n    pm100 <= PM_THRESHOLDS.PM100.Excellent) {\r\n    return \"Excellent\";\r\n  }\r\n  // Check Good\r\n  else if (pm01 <= PM_THRESHOLDS.PM01.Good &&\r\n    pm25 <= PM_THRESHOLDS.PM25.Good &&\r\n    pm100 <= PM_THRESHOLDS.PM100.Good) {\r\n    return \"Good\";\r\n  }\r\n  // Check Moderate\r\n  else if (pm01 <= PM_THRESHOLDS.PM01.moderate &&\r\n    pm25 <= PM_THRESHOLDS.PM25.moderate &&\r\n    pm100 <= PM_THRESHOLDS.PM100.moderate) {\r\n    return \"Moderate\";\r\n  }\r\n  // Check Unhealthy\r\n  else if (pm01 <= PM_THRESHOLDS.PM01.unhealthy &&\r\n    pm25 <= PM_THRESHOLDS.PM25.unhealthy &&\r\n    pm100 <= PM_THRESHOLDS.PM100.unhealthy) {\r\n    return \"Unhealthy\";\r\n  }\r\n  // If above all thresholds, return Hazardous\r\n  else {\r\n    return \"Hazardous\";\r\n  }\r\n};\r\n\r\n// Hook สำหรับ default monitoring data (Cafe Amazon)\r\nexport const useMonitoringData = () => {\r\n  return useLocationMonitoringData({\r\n    id: 'cafe-amazon-st',\r\n    name: 'Cafe Amazon สาขา ST',\r\n    pieraUserId: 'gdRueJtWeNaMleXbEf4rWfuD6Kr1',\r\n    rawDataPath: 'Cafe'\r\n  });\r\n};\r\n\r\n// Hook สำหรับข้อมูลตามตำแหน่งที่เลือก\r\nexport const useLocationMonitoringData = (locationData) => {\r\n  const [monitoringData, setMonitoringData] = useState({\r\n    date: formatDisplayDate(new Date()), // ใช้ local time\r\n    time: getCurrentTime(), // ใช้ local time\r\n    locationName: locationData?.name || \"กำลังโหลด...\",\r\n    mainReading: {\r\n      value: 0,\r\n      unit: \"μg/m³\",\r\n      status: \"Good\",\r\n      note: \"(Initializing...)\"\r\n    },\r\n    conditions: {\r\n      temperature: \"Loading...\",\r\n      humidity: \"Loading...\"\r\n    },\r\n    pmReadings: [\r\n      { type: \"PM0.1\", value: \"Loading...\" },\r\n      { type: \"PM2.5\", value: \"Loading...\" },\r\n      { type: \"PM10\", value: \"Loading...\" }\r\n    ],\r\n    recommendations: [\r\n      \"กำลังโหลดข้อมูล...\",\r\n      \"กำลังเชื่อมต่อกับ Firebase...\",\r\n      \"โปรดรอสักครู่...\"\r\n    ]\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!locationData || !locationData.rawDataPath) {\r\n      return;\r\n    }\r\n\r\n    const datePath = getCurrentDatePath();\r\n\r\n    // ใช้ Firebase project เดียวกัน แต่ path ต่างกัน\r\n    const pieraUserId = locationData.pieraUserId;\r\n    const rawDataPath = locationData.rawDataPath;\r\n\r\n    // Set up paths สำหรับแต่ละตำแหน่ง\r\n    const pieraDataPath = `/${PIERA_PATH}/${pieraUserId}/${datePath}`;\r\n    const rawFirebasePath = `/${RAW_PATH}${rawDataPath}/${datePath}`;\r\n\r\n    console.log('Loading data from paths:', {\r\n      location: locationData.name,\r\n      pieraUserId: pieraUserId,\r\n      pieraPath: pieraDataPath,\r\n      rawPath: rawFirebasePath\r\n    });\r\n\r\n    // Create queries for both paths (ใช้ database เดียวกัน)\r\n    const pieraQuery = query(\r\n      ref(database, pieraDataPath),\r\n      orderByKey(),\r\n      limitToLast(1)\r\n    );\r\n\r\n    const rawQuery = query(\r\n      ref(database, rawFirebasePath),\r\n      orderByKey(),\r\n      limitToLast(1)\r\n    );\r\n\r\n    // Subscribe to Piera data updates\r\n    const pieraUnsubscribe = onValue(pieraQuery, (snapshot) => {\r\n      const timeData = snapshot.val();\r\n\r\n      if (timeData) {\r\n        const latestTime = Object.keys(timeData)[0];\r\n        const data = timeData[latestTime];\r\n\r\n        if (data) {\r\n          const pm01 = parseFloat(data.PM01 || 0);\r\n          const pm25 = parseFloat(data.PM25 || 0);\r\n          const pm10 = parseFloat(data.PM100 || 0);\r\n\r\n          // ใช้เกณฑ์เดียวกันสำหรับทุกตำแหน่ง\r\n          const airQualityStatus = determineAirQuality(pm01, pm25, pm10);\r\n          // คำแนะนำเดียวกันสำหรับทุกตำแหน่ง โดยใช้สถานะคุณภาพอากาศเป็นหลัก\r\n          const recommendations = getRecommendations(airQualityStatus);\r\n\r\n          console.log(`Location: ${locationData.name}, PM Values:`, {\r\n            PM01: pm01,\r\n            PM25: pm25,\r\n            PM100: pm10,\r\n            AirQuality: airQualityStatus,\r\n            Timestamp: latestTime\r\n          });\r\n\r\n          // อัพเดทข้อมูลใหม่ - เก็บข้อมูลเดิมและอัพเดทเฉพาะส่วนที่เปลี่ยน\r\n          setMonitoringData(prevData => ({\r\n            ...prevData, // เก็บข้อมูลเดิม\r\n            date: formatDisplayDate(new Date()), // ใช้ local time ปัจจุบัน\r\n            time: latestTime, // เวลาจาก Firebase\r\n            locationName: locationData.name,\r\n            mainReading: {\r\n              value: pm01, // ค่าหลักจะเป็น PM0.1 ของแต่ละตำแหน่ง\r\n              unit: \"μg/m³\",\r\n              status: airQualityStatus, // สถานะตามค่าที่วัดได้\r\n              note: \"(Long-term/Short-term)\"\r\n            },\r\n            pmReadings: [ // ค่าฝุ่นจะแตกต่างกันตามตำแหน่ง\r\n              { type: \"PM0.1\", value: `${pm01} μg/m³` },\r\n              { type: \"PM2.5\", value: `${pm25} μg/m³` },\r\n              { type: \"PM10\", value: `${pm10} μg/m³` }\r\n            ],\r\n            recommendations // คำแนะนำเดียวกันตามเกณฑ์มาตรฐาน\r\n            // conditions จะถูกอัพเดทแยกจาก RAW data subscription\r\n          }));\r\n        }\r\n      } else {\r\n        console.log('No Piera data found for location:', locationData.name);\r\n        // เมื่อไม่มีข้อมูล - เก็บข้อมูลเดิมและแสดงสถานะ No Data\r\n        setMonitoringData(prevData => ({\r\n          ...prevData, // เก็บข้อมูลเดิม\r\n          date: formatDisplayDate(new Date()),\r\n          time: getCurrentTime(),\r\n          locationName: locationData.name,\r\n          mainReading: {\r\n            ...prevData.mainReading,\r\n            note: \"(No data available)\"\r\n          },\r\n          recommendations: [\r\n            `ไม่พบข้อมูลใหม่สำหรับ ${locationData.name}`,\r\n            \"แสดงข้อมูลล่าสุดที่มี\",\r\n            \"จะอัพเดทเมื่อมีข้อมูลใหม่เข้ามา\"\r\n          ]\r\n        }));\r\n      }\r\n    }, (error) => {\r\n      console.error('Error fetching Piera data for', locationData.name, ':', error);\r\n      // เมื่อเกิด error - เก็บข้อมูลเดิมและแสดงสถานะ Error\r\n      setMonitoringData(prevData => ({\r\n        ...prevData, // เก็บข้อมูลเดิม\r\n        date: formatDisplayDate(new Date()),\r\n        time: getCurrentTime(),\r\n        locationName: locationData.name,\r\n        mainReading: {\r\n          ...prevData.mainReading,\r\n          note: \"(Error loading data)\"\r\n        },\r\n        recommendations: [\r\n          `เกิดข้อผิดพลาดในการโหลดข้อมูลจาก ${locationData.name}`,\r\n          \"แสดงข้อมูลล่าสุดที่มี\",\r\n          \"กรุณาตรวจสอบการเชื่อมต่ออินเทอร์เน็ต\"\r\n        ]\r\n      }));\r\n    });\r\n\r\n    // Subscribe to RAW data updates\r\n    const rawUnsubscribe = onValue(rawQuery, (snapshot) => {\r\n      const timeData = snapshot.val();\r\n\r\n      if (timeData) {\r\n        const latestTime = Object.keys(timeData)[0];\r\n        const data = timeData[latestTime];\r\n\r\n        if (data) {\r\n          console.log(`RAW data for ${locationData.name}:`, {\r\n            Temperature: data.IndoorTemperature,\r\n            Humidity: data.IndoorHumidity,\r\n            Timestamp: latestTime\r\n          });\r\n\r\n          // อัพเดทเฉพาะ conditions โดยเก็บข้อมูลเดิมไว้\r\n          setMonitoringData(prevData => ({\r\n            ...prevData,\r\n            conditions: {\r\n              temperature: `${data.IndoorTemperature || \"N/A\"}°C`,\r\n              humidity: `${data.IndoorHumidity || \"N/A\"}%`\r\n            }\r\n          }));\r\n        }\r\n      } else {\r\n        console.log('No RAW data found for location:', locationData.name);\r\n        // เมื่อไม่มีข้อมูล RAW - เก็บข้อมูลเดิมแต่แสดงสถานะ N/A\r\n        setMonitoringData(prevData => ({\r\n          ...prevData,\r\n          conditions: {\r\n            temperature: prevData.conditions?.temperature || \"N/A°C\",\r\n            humidity: prevData.conditions?.humidity || \"N/A%\"\r\n          }\r\n        }));\r\n      }\r\n    }, (error) => {\r\n      console.error('Error fetching RAW data for', locationData.name, ':', error);\r\n      // เมื่อเกิด error - เก็บข้อมูลเดิม\r\n      setMonitoringData(prevData => ({\r\n        ...prevData,\r\n        conditions: {\r\n          temperature: prevData.conditions?.temperature || \"Error°C\",\r\n          humidity: prevData.conditions?.humidity || \"Error%\"\r\n        }\r\n      }));\r\n    });\r\n\r\n    // Cleanup function to unsubscribe from both listeners\r\n    return () => {\r\n      pieraUnsubscribe();\r\n      rawUnsubscribe();\r\n    };\r\n  }, [locationData?.id, locationData?.rawDataPath]); // เปลี่ยนจาก firebasePath เป็น rawDataPath // เปลี่ยนจาก locationData ทั้งหมดเป็นเฉพาะ id และ firebasePath\r\n\r\n  return monitoringData;\r\n};\r\n\r\nconst getRecommendations = (airQualityStatus) => {\r\n  // คำแนะนำเดียวกันสำหรับทุกตำแหน่ง - ใช้เกณฑ์มาตรฐานสากล\r\n  switch (airQualityStatus) {\r\n    case 'Excellent':\r\n      return [\r\n        \"ไม่มีผลต่อสุขภาพ\",\r\n        \"สามารถใช้ชีวิตได้ตามปกติ\",\r\n        \"สามารถเปิดหน้าต่างระบายอากาศได้\"\r\n      ];\r\n    case 'Good':\r\n      return [\r\n        \"ไม่มีผลต่อสุขภาพ\",\r\n        \"สามารถใช้ชีวิตได้ตามปกติ\",\r\n        \"สามารถเปิดหน้าต่างระบายอากาศได้\",\r\n        \"กลุ่มเปราะบางอาจะมีความเสี่ยงและสังเกตอาการของตนเอง\"\r\n      ];\r\n    case 'Moderate':\r\n      return [\r\n        \"ควรปิดหน้าต่างเมื่ออยู่ในอาคาร\",\r\n        \"หลีกเลี่ยงการทำกิจกรรมที่ก่อให้เกิดฝุ่น\",\r\n        \"กลุ่มคนทั่วไปและกลุ่มเปราะบางมีความเสี่ยงและสังเกตอาการของตนเอง\"\r\n      ];\r\n    case 'Unhealthy':\r\n      return [\r\n        \"กลุ่มคนทั่วไปและกลุ่มเปราะบางมีความเสี่ยงและสังเกตอาการของตนเอง\",\r\n        \"หลีกเลี่ยงการทำกิจกรรมที่ก่อให้เกิดฝุ่น\",\r\n        \"เตรียมยาหรืออุปกรณ์ตามคำสั่งแพทย์\",\r\n        \"ติดตั้งเครื่องฟอกอากาศ\"\r\n      ];\r\n    case 'Hazardous':\r\n      return [\r\n        \"ทั้งกลุ่มคนทั่วไปและกลุ่มเปราะบางมีความเสี่ยงสูง\",\r\n        \"งดการทำกิจกรรมหรือเข้าใกล้พื้นที่ที่มีฝุ่น\",\r\n        \"สังเกตอาการของตนเอง หากมีอาการให้ไปพบแพทย์\"\r\n      ];\r\n    default:\r\n      return [\r\n        \"กำลังโหลดข้อมูล...\",\r\n        \"กำลังวิเคราะห์คุณภาพอากาศ...\",\r\n        \"กำลังประมวลผลคำแนะนำ...\"\r\n      ];\r\n  }\r\n};"],"names":[],"mappings":";;;;;;;;AAEA;AACA;AACA;AAFA;AACA;AAHA;;;;AAMA,6CAA6C;AAC7C,MAAM,iBAAiB;IACrB,QAAQ;IACR,YAAY;IACZ,aAAa;IACb,WAAW;IACX,eAAe;IACf,mBAAmB;IACnB,OAAO;IACP,eAAe;AACjB;AAEA,0CAA0C;AAC1C,MAAM,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;AAC1B,MAAM,WAAW,CAAA,GAAA,qLAAA,CAAA,cAAW,AAAD,EAAE;AAE7B,YAAY;AACZ,MAAM,mBAAmB;AACzB,MAAM,aAAa;AACnB,MAAM,WAAW;AAEjB,2CAA2C;AAC3C,MAAM,qBAAqB;IACzB,yBAAyB;IACzB,MAAM,OAAO,IAAI;IACjB,MAAM,OAAO,KAAK,WAAW;IAC7B,MAAM,QAAQ,CAAC,KAAK,QAAQ,KAAK,CAAC,EAAE,QAAQ,GAAG,QAAQ,CAAC,GAAG;IAC3D,MAAM,MAAM,KAAK,OAAO,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;IAClD,OAAO,GAAG,KAAK,CAAC,EAAE,MAAM,CAAC,EAAE,KAAK;AAClC;AAEA,MAAM,iBAAiB;IACrB,yBAAyB;IACzB,MAAM,OAAO,IAAI;IACjB,MAAM,QAAQ,KAAK,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;IACrD,MAAM,UAAU,KAAK,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;IACzD,MAAM,UAAU,KAAK,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;IACzD,OAAO,GAAG,MAAM,CAAC,EAAE,QAAQ,CAAC,EAAE,SAAS;AACzC;AAEA,MAAM,oBAAoB,CAAC;IACzB,wCAAwC;IACxC,MAAM,aAAa,QAAQ,IAAI;IAC/B,MAAM,QAAQ,CAAC,WAAW,QAAQ,KAAK,CAAC,EAAE,QAAQ,GAAG,QAAQ,CAAC,GAAG;IACjE,MAAM,MAAM,WAAW,OAAO,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;IACxD,MAAM,OAAO,WAAW,WAAW;IACnC,OAAO,GAAG,MAAM,CAAC,EAAE,IAAI,CAAC,EAAE,MAAM;AAClC;AAGO,MAAM,qBAAqB,CAAC;IACjC,MAAM,SAAS;QACb,WAAW;QACX,MAAM;QACN,UAAU;QACV,WAAW;QACX,WAAW;IACb;IACA,OAAO,MAAM,CAAC,OAAO,IAAI,OAAO,QAAQ;AAC1C;AAEO,MAAM,gBAAgB,CAAC;IAC5B,MAAM,eAAe,WAAW;IAChC,IAAI,MAAM,eAAe,OAAO;IAChC,OAAO,GAAG,aAAa,OAAO,CAAC,GAAG,MAAM,CAAC;AAC3C;AAGO,MAAM,wBAAwB,CAAC;IACpC,gDAAgD;IAChD,IAAI,CAAC,kBAAkB,OAAO,mBAAmB,UAAU;QACzD,OAAO;IACT;IAEA,iDAAiD;IACjD,MAAM,OAAO,eAAe,WAAW;IAEvC,4BAA4B;IAC5B,IAAI,KAAK,QAAQ,CAAC,qBAAqB;QACrC,OAAO;IACT;IAEA,6BAA6B;IAC7B,IAAI,KAAK,QAAQ,CAAC,uBAAuB;QACvC,OAAO;IACT;IAEA,uCAAuC;IACvC,IAAI,KAAK,QAAQ,CAAC,2BAA2B;QAC3C,OAAO;IACT;IAEA,4BAA4B;IAC5B,IAAI,KAAK,QAAQ,CAAC,gBAAgB;QAChC,OAAO;IACT;IAEA,mDAAmD;IACnD,IAAI,KAAK,QAAQ,CAAC,4CAA4C;QAC5D,OAAO;IACT;IAEA,sDAAsD;IACtD,IAAI,KAAK,QAAQ,CAAC,+CAA+C;QAC/D,OAAO;IACT;IAEA,+CAA+C;IAC/C,IAAI,KAAK,QAAQ,CAAC,oBAAoB,KAAK,QAAQ,CAAC,gBAAgB;QAClE,OAAO;IACT;IAEA,+CAA+C;IAC/C,IAAI,KAAK,QAAQ,CAAC,oBAAoB,KAAK,QAAQ,CAAC,gBAAgB;QAClE,OAAO;IACT;IAEA,2BAA2B;IAC3B,IAAI,KAAK,QAAQ,CAAC,kBAAkB;QAClC,OAAO;IACT;IAEA,kCAAkC;IAClC,IAAI,KAAK,QAAQ,CAAC,sCAAsC;QACtD,OAAO;IACT;IAEA,6BAA6B;IAC7B,IAAI,KAAK,QAAQ,CAAC,2BAA2B;QAC3C,OAAO;IACT;IAEA,wCAAwC;IACxC,IAAI,KAAK,QAAQ,CAAC,+CAA+C;QAC/D,OAAO;IACT;IAEA,2BAA2B;IAC3B,IAAI,KAAK,QAAQ,CAAC,gBAAgB,KAAK,QAAQ,CAAC,qBAAqB,KAAK,QAAQ,CAAC,kBAAkB;QACnG,OAAO;IACT;IAEA,gBAAgB;IAChB,OAAO;AACT;AAEO,MAAM,gBAAgB;IAC3B,MAAM;QACJ,WAAW;QACX,MAAM;QACN,UAAU;QACV,WAAW;QACX,WAAW,OAAO,SAAS;IAC7B;IACA,MAAM;QACJ,WAAW;QACX,MAAM;QACN,UAAU;QACV,WAAW;QACX,WAAW,OAAO,SAAS;IAC7B;IACA,OAAO;QACL,WAAW;QACX,MAAM;QACN,UAAU;QACV,WAAW;QACX,WAAW,OAAO,SAAS;IAC7B;AACF;AAEA,MAAM,sBAAsB,CAAC,MAAM,MAAM;IACvC,kBAAkB;IAClB,IAAI,QAAQ,cAAc,IAAI,CAAC,SAAS,IACtC,QAAQ,cAAc,IAAI,CAAC,SAAS,IACpC,SAAS,cAAc,KAAK,CAAC,SAAS,EAAE;QACxC,OAAO;IACT,OAEK,IAAI,QAAQ,cAAc,IAAI,CAAC,IAAI,IACtC,QAAQ,cAAc,IAAI,CAAC,IAAI,IAC/B,SAAS,cAAc,KAAK,CAAC,IAAI,EAAE;QACnC,OAAO;IACT,OAEK,IAAI,QAAQ,cAAc,IAAI,CAAC,QAAQ,IAC1C,QAAQ,cAAc,IAAI,CAAC,QAAQ,IACnC,SAAS,cAAc,KAAK,CAAC,QAAQ,EAAE;QACvC,OAAO;IACT,OAEK,IAAI,QAAQ,cAAc,IAAI,CAAC,SAAS,IAC3C,QAAQ,cAAc,IAAI,CAAC,SAAS,IACpC,SAAS,cAAc,KAAK,CAAC,SAAS,EAAE;QACxC,OAAO;IACT,OAEK;QACH,OAAO;IACT;AACF;AAGO,MAAM,oBAAoB;IAC/B,OAAO,0BAA0B;QAC/B,IAAI;QACJ,MAAM;QACN,aAAa;QACb,aAAa;IACf;AACF;AAGO,MAAM,4BAA4B,CAAC;IACxC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACnD,MAAM,kBAAkB,IAAI;QAC5B,MAAM;QACN,cAAc,cAAc,QAAQ;QACpC,aAAa;YACX,OAAO;YACP,MAAM;YACN,QAAQ;YACR,MAAM;QACR;QACA,YAAY;YACV,aAAa;YACb,UAAU;QACZ;QACA,YAAY;YACV;gBAAE,MAAM;gBAAS,OAAO;YAAa;YACrC;gBAAE,MAAM;gBAAS,OAAO;YAAa;YACrC;gBAAE,MAAM;gBAAQ,OAAO;YAAa;SACrC;QACD,iBAAiB;YACf;YACA;YACA;SACD;IACH;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,gBAAgB,CAAC,aAAa,WAAW,EAAE;YAC9C;QACF;QAEA,MAAM,WAAW;QAEjB,iDAAiD;QACjD,MAAM,cAAc,aAAa,WAAW;QAC5C,MAAM,cAAc,aAAa,WAAW;QAE5C,kCAAkC;QAClC,MAAM,gBAAgB,CAAC,CAAC,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC,EAAE,UAAU;QACjE,MAAM,kBAAkB,CAAC,CAAC,EAAE,WAAW,YAAY,CAAC,EAAE,UAAU;QAEhE,QAAQ,GAAG,CAAC,4BAA4B;YACtC,UAAU,aAAa,IAAI;YAC3B,aAAa;YACb,WAAW;YACX,SAAS;QACX;QAEA,wDAAwD;QACxD,MAAM,aAAa,CAAA,GAAA,qLAAA,CAAA,QAAK,AAAD,EACrB,CAAA,GAAA,qLAAA,CAAA,MAAG,AAAD,EAAE,UAAU,gBACd,CAAA,GAAA,qLAAA,CAAA,aAAU,AAAD,KACT,CAAA,GAAA,qLAAA,CAAA,cAAW,AAAD,EAAE;QAGd,MAAM,WAAW,CAAA,GAAA,qLAAA,CAAA,QAAK,AAAD,EACnB,CAAA,GAAA,qLAAA,CAAA,MAAG,AAAD,EAAE,UAAU,kBACd,CAAA,GAAA,qLAAA,CAAA,aAAU,AAAD,KACT,CAAA,GAAA,qLAAA,CAAA,cAAW,AAAD,EAAE;QAGd,kCAAkC;QAClC,MAAM,mBAAmB,CAAA,GAAA,qLAAA,CAAA,UAAO,AAAD,EAAE,YAAY,CAAC;YAC5C,MAAM,WAAW,SAAS,GAAG;YAE7B,IAAI,UAAU;gBACZ,MAAM,aAAa,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE;gBAC3C,MAAM,OAAO,QAAQ,CAAC,WAAW;gBAEjC,IAAI,MAAM;oBACR,MAAM,OAAO,WAAW,KAAK,IAAI,IAAI;oBACrC,MAAM,OAAO,WAAW,KAAK,IAAI,IAAI;oBACrC,MAAM,OAAO,WAAW,KAAK,KAAK,IAAI;oBAEtC,mCAAmC;oBACnC,MAAM,mBAAmB,oBAAoB,MAAM,MAAM;oBACzD,iEAAiE;oBACjE,MAAM,kBAAkB,mBAAmB;oBAE3C,QAAQ,GAAG,CAAC,CAAC,UAAU,EAAE,aAAa,IAAI,CAAC,YAAY,CAAC,EAAE;wBACxD,MAAM;wBACN,MAAM;wBACN,OAAO;wBACP,YAAY;wBACZ,WAAW;oBACb;oBAEA,gEAAgE;oBAChE,kBAAkB,CAAA,WAAY,CAAC;4BAC7B,GAAG,QAAQ;4BACX,MAAM,kBAAkB,IAAI;4BAC5B,MAAM;4BACN,cAAc,aAAa,IAAI;4BAC/B,aAAa;gCACX,OAAO;gCACP,MAAM;gCACN,QAAQ;gCACR,MAAM;4BACR;4BACA,YAAY;gCACV;oCAAE,MAAM;oCAAS,OAAO,GAAG,KAAK,MAAM,CAAC;gCAAC;gCACxC;oCAAE,MAAM;oCAAS,OAAO,GAAG,KAAK,MAAM,CAAC;gCAAC;gCACxC;oCAAE,MAAM;oCAAQ,OAAO,GAAG,KAAK,MAAM,CAAC;gCAAC;6BACxC;4BACD;wBAEF,CAAC;gBACH;YACF,OAAO;gBACL,QAAQ,GAAG,CAAC,qCAAqC,aAAa,IAAI;gBAClE,wDAAwD;gBACxD,kBAAkB,CAAA,WAAY,CAAC;wBAC7B,GAAG,QAAQ;wBACX,MAAM,kBAAkB,IAAI;wBAC5B,MAAM;wBACN,cAAc,aAAa,IAAI;wBAC/B,aAAa;4BACX,GAAG,SAAS,WAAW;4BACvB,MAAM;wBACR;wBACA,iBAAiB;4BACf,CAAC,sBAAsB,EAAE,aAAa,IAAI,EAAE;4BAC5C;4BACA;yBACD;oBACH,CAAC;YACH;QACF,GAAG,CAAC;YACF,QAAQ,KAAK,CAAC,iCAAiC,aAAa,IAAI,EAAE,KAAK;YACvE,qDAAqD;YACrD,kBAAkB,CAAA,WAAY,CAAC;oBAC7B,GAAG,QAAQ;oBACX,MAAM,kBAAkB,IAAI;oBAC5B,MAAM;oBACN,cAAc,aAAa,IAAI;oBAC/B,aAAa;wBACX,GAAG,SAAS,WAAW;wBACvB,MAAM;oBACR;oBACA,iBAAiB;wBACf,CAAC,iCAAiC,EAAE,aAAa,IAAI,EAAE;wBACvD;wBACA;qBACD;gBACH,CAAC;QACH;QAEA,gCAAgC;QAChC,MAAM,iBAAiB,CAAA,GAAA,qLAAA,CAAA,UAAO,AAAD,EAAE,UAAU,CAAC;YACxC,MAAM,WAAW,SAAS,GAAG;YAE7B,IAAI,UAAU;gBACZ,MAAM,aAAa,OAAO,IAAI,CAAC,SAAS,CAAC,EAAE;gBAC3C,MAAM,OAAO,QAAQ,CAAC,WAAW;gBAEjC,IAAI,MAAM;oBACR,QAAQ,GAAG,CAAC,CAAC,aAAa,EAAE,aAAa,IAAI,CAAC,CAAC,CAAC,EAAE;wBAChD,aAAa,KAAK,iBAAiB;wBACnC,UAAU,KAAK,cAAc;wBAC7B,WAAW;oBACb;oBAEA,8CAA8C;oBAC9C,kBAAkB,CAAA,WAAY,CAAC;4BAC7B,GAAG,QAAQ;4BACX,YAAY;gCACV,aAAa,GAAG,KAAK,iBAAiB,IAAI,MAAM,EAAE,CAAC;gCACnD,UAAU,GAAG,KAAK,cAAc,IAAI,MAAM,CAAC,CAAC;4BAC9C;wBACF,CAAC;gBACH;YACF,OAAO;gBACL,QAAQ,GAAG,CAAC,mCAAmC,aAAa,IAAI;gBAChE,wDAAwD;gBACxD,kBAAkB,CAAA,WAAY,CAAC;wBAC7B,GAAG,QAAQ;wBACX,YAAY;4BACV,aAAa,SAAS,UAAU,EAAE,eAAe;4BACjD,UAAU,SAAS,UAAU,EAAE,YAAY;wBAC7C;oBACF,CAAC;YACH;QACF,GAAG,CAAC;YACF,QAAQ,KAAK,CAAC,+BAA+B,aAAa,IAAI,EAAE,KAAK;YACrE,mCAAmC;YACnC,kBAAkB,CAAA,WAAY,CAAC;oBAC7B,GAAG,QAAQ;oBACX,YAAY;wBACV,aAAa,SAAS,UAAU,EAAE,eAAe;wBACjD,UAAU,SAAS,UAAU,EAAE,YAAY;oBAC7C;gBACF,CAAC;QACH;QAEA,sDAAsD;QACtD,OAAO;YACL;YACA;QACF;IACF,GAAG;QAAC,cAAc;QAAI,cAAc;KAAY,GAAG,2GAA2G;IAE9J,OAAO;AACT;AAEA,MAAM,qBAAqB,CAAC;IAC1B,wDAAwD;IACxD,OAAQ;QACN,KAAK;YACH,OAAO;gBACL;gBACA;gBACA;aACD;QACH,KAAK;YACH,OAAO;gBACL;gBACA;gBACA;gBACA;aACD;QACH,KAAK;YACH,OAAO;gBACL;gBACA;gBACA;aACD;QACH,KAAK;YACH,OAAO;gBACL;gBACA;gBACA;gBACA;aACD;QACH,KAAK;YACH,OAAO;gBACL;gBACA;gBACA;aACD;QACH;YACE,OAAO;gBACL;gBACA;gBACA;aACD;IACL;AACF"}},
    {"offset": {"line": 501, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 507, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ttigg/Documents/GitHub/TestWeb/src/components/MonitoringInterface.js"],"sourcesContent":["'use client'\r\n\r\nimport React, { useState } from 'react';\r\nimport Link from 'next/link';\r\nimport { ArrowUpRight, Thermometer, Droplets, Menu, X, ChevronUp, MapPin } from 'lucide-react';\r\nimport {\r\n  getAirQualityColor,\r\n  formatPMValue,\r\n  getRecommendationIcon,\r\n  useMonitoringData,\r\n  useLocationMonitoringData\r\n} from '../data/monitoring-data';\r\n\r\nconst Header = () => {\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n  return (\r\n    <header className=\"h-16 bg-green-100 border-b border-green-100 flex-shrink-0\">\r\n      <div className=\"h-full flex items-center justify-between px-4\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <div className=\"w-18 h-18 flex-shrink-0 flex items-center justify-center\">\r\n            <img\r\n              src=\"/mupcop-logo.png\"\r\n              alt=\"Mupcop logo\"\r\n              className=\"w-14 h-14 object-contain\"\r\n              width={82}\r\n              height={82}\r\n            />\r\n          </div>\r\n          <div>\r\n            <h1 className=\"text-xl font-bold text-black\">Mupcop</h1>\r\n            <h2 className=\"text-xs font-light text-black max-w-xl\">\r\n              Multi-factor ultrafine particle optimization prediction\r\n            </h2>\r\n          </div>\r\n        </div>\r\n\r\n        <nav className=\"hidden sm:flex items-center gap-4\">\r\n          <Link href=\"/\" className=\"px-3 py-1 text-base font-semibold text-black rounded-lg hover:bg-green-200 transition-colors\">\r\n            Air quality\r\n          </Link>\r\n          <Link href=\"/history-data\" className=\"px-3 py-1 text-base font-semibold text-black rounded-lg hover:bg-green-200 transition-colors\">\r\n            History data\r\n          </Link>\r\n        </nav>\r\n\r\n        <button\r\n          className=\"sm:hidden\"\r\n          onClick={() => setIsMenuOpen(!isMenuOpen)}\r\n        >\r\n          {isMenuOpen ? <X size={20} /> : <Menu size={20} />}\r\n        </button>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nconst MonitoringPanel = ({ selectedLocation, onLocationClear }) => {\r\n  // ใช้ข้อมูลตามตำแหน่งที่เลือก หรือใช้ข้อมูลเริ่มต้น\r\n  const defaultData = useMonitoringData();\r\n  const locationData = useLocationMonitoringData(selectedLocation);\r\n\r\n  // เลือกข้อมูลที่จะแสดง\r\n  const data = selectedLocation ? locationData : defaultData;\r\n  const statusColor = getAirQualityColor(data.mainReading.status);\r\n\r\n  if (!data) return (\r\n    <div className=\"flex items-center justify-center h-full\">\r\n      <div className=\"text-center\">\r\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-800 mb-2\"></div>\r\n        <p className=\"text-sm text-gray-600\">กำลังโหลดข้อมูล...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"w-1/3 bg-gray-50/50 border-r border-gray-100 overflow-auto\">\r\n      <div className=\"p-3\">\r\n        {/* Location Header */}\r\n        <div className=\"flex items-center justify-between mb-3\">\r\n          <h2 className=\"text-xl font-light text-black-800\">UFPs Monitoring</h2>\r\n          {selectedLocation && onLocationClear && (\r\n            <button\r\n              onClick={onLocationClear}\r\n              className=\"text-xs text-gray-500 hover:text-gray-700 bg-gray-100 hover:bg-gray-200 px-2 py-1 rounded-md transition-colors\"\r\n            >\r\n              × ล้าง\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Selected Location Indicator */}\r\n        {selectedLocation && (\r\n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-3 mb-3\">\r\n            <div className=\"flex items-center gap-2 mb-2\">\r\n              <MapPin className=\"w-4 h-4 text-blue-600\" />\r\n              <span className=\"text-sm font-medium text-blue-800\">\r\n                {selectedLocation.name}\r\n              </span>\r\n            </div>\r\n            <p className=\"text-xs text-blue-600\">\r\n              📍 คลิกที่หมุดเพื่อดูข้อมูลตำแหน่งนั้น\r\n            </p>\r\n            <p className=\"text-xs text-blue-500 mt-1\">\r\n              กำลังแสดงข้อมูลจากตำแหน่งที่เลือก\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Default location info when no location selected */}\r\n        {!selectedLocation && (\r\n          <div className=\"bg-green-50 border border-green-200 rounded-lg p-3 mb-3\">\r\n            <div className=\"flex items-center gap-2 mb-2\">\r\n              <MapPin className=\"w-4 h-4 text-green-600\" />\r\n              <span className=\"text-sm font-medium text-green-800\">\r\n                Cafe Amazon สาขา ST\r\n              </span>\r\n            </div>\r\n            <p className=\"text-xs text-green-600\">\r\n              📍 คลิกที่หมุดบนแผนที่เพื่อดูข้อมูลตำแหน่งอื่น\r\n            </p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Main reading card */}\r\n        <div className=\"bg-white rounded-lg p-3 shadow-sm border border-gray-100 mb-3\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <div className=\"flex items-center gap-2\">\r\n              <div className=\"w-2 h-2 bg-green-500 rounded-full animate-pulse\" />\r\n              <span className=\"text-base font-semibold text-black\">LIVE</span>\r\n            </div>\r\n            <span className=\"text-xs text-black\">{data.date}</span>\r\n          </div>\r\n\r\n          {/* Location name in main reading */}\r\n          <div className=\"text-xs text-gray-600 mb-2 flex items-center gap-1\">\r\n            <MapPin className=\"w-3 h-3\" />\r\n            {selectedLocation ? selectedLocation.name : \"Cafe Amazon สาขา ST\"}\r\n          </div>\r\n\r\n          <div\r\n            className=\"p-3 rounded-lg mb-3 shadow-sm text-white\"\r\n            style={{ backgroundColor: statusColor }}\r\n          >\r\n            <div className=\"flex justify-between items-start\">\r\n              <div>\r\n                <span className=\"text-xl font-bold\">{data.mainReading.value}</span>\r\n                <span className=\"text-sm ml-1\">{data.mainReading.unit}</span>\r\n              </div>\r\n              <div className=\"text-right\">\r\n                <div className=\"text-sm font-medium\">{data.mainReading.status}</div>\r\n                <div className=\"text-xs opacity-90\">{data.mainReading.note}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-2 gap-3 text-xs\">\r\n            <div className=\"text-center flex flex-col items-center gap-1\">\r\n              <Thermometer className=\"w-4 h-4 text-gray-400\" />\r\n              <div className=\"text-gray-600\">{data.conditions.temperature}</div>\r\n            </div>\r\n            <div className=\"text-center flex flex-col items-center gap-1\">\r\n              <Droplets className=\"w-4 h-4 text-gray-400\" />\r\n              <div className=\"text-gray-600\">{data.conditions.humidity}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* PM Readings */}\r\n        <div className=\"grid gap-2 grid-cols-1 mb-3\">\r\n          {data.pmReadings.map((reading, index) => (\r\n            <div\r\n              key={`pm-${index}`}\r\n              className=\"bg-white p-2.5 rounded-lg shadow-sm border border-gray-100\"\r\n            >\r\n              <div className=\"flex justify-between items-center\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  <div className=\"w-2 h-2 bg-blue-500 rounded-full\" />\r\n                  <span className=\"text-sm font-medium\">{reading.type}</span>\r\n                </div>\r\n                <span className=\"text-sm text-blue-500 font-medium\">\r\n                  {formatPMValue(reading.value)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Recommendations */}\r\n        <div className=\"bg-white rounded-lg p-3 shadow-sm border border-gray-100\">\r\n          <h3 className=\"text-sm font-medium text-gray-800 mb-2\">\r\n            คำแนะนำสำหรับ {selectedLocation ? selectedLocation.name : \"Cafe Amazon สาขา ST\"}\r\n          </h3>\r\n          <div className=\"space-y-2 text-xs\">\r\n            {data.recommendations.map((recommendation, index) => (\r\n              <div\r\n                key={`rec-${index}`}\r\n                className=\"flex items-start gap-2 text-gray-600\"\r\n              >\r\n                <span className=\"text-sm mt-0.5 flex-shrink-0\">\r\n                  {getRecommendationIcon(recommendation)}\r\n                </span>\r\n                <span className=\"flex-1\">{recommendation}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Data Source Info */}\r\n        <div className=\"mt-3 p-2 bg-gray-100 rounded-lg\">\r\n          <div className=\"text-xs text-gray-600\">\r\n            <div className=\"flex items-center gap-1 mb-1\">\r\n              <div className=\"w-1.5 h-1.5 bg-green-500 rounded-full\" />\r\n              <span>อัพเดทล่าสุด: {data.time}</span>\r\n            </div>\r\n            <div className=\"text-gray-500\">\r\n              {selectedLocation ?\r\n                `ข้อมูลจาก: ${selectedLocation.name}` :\r\n                'ข้อมูลเริ่มต้น: Cafe Amazon สาขา ST'\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Click instruction */}\r\n        <div className=\"mt-2 p-2 bg-yellow-50 border border-yellow-200 rounded-lg\">\r\n          <div className=\"text-xs text-yellow-800\">\r\n            💡 <strong>วิธีใช้:</strong> คลิกที่หมุดบนแผนที่เพื่อดูข้อมูลคุณภาพอากาศของตำแหน่งนั้น\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Footer = () => (\r\n  <footer className=\"flex flex-col sm:flex-row items-start sm:items-center gap-2 p-4 bg-green-100 border-t border-green-100\">\r\n    <span className=\"text-base text-black\">Made with by Jaejae Dream Yok ❤️</span>\r\n    <div className=\"flex items-center justify-end ml-auto gap-4\">\r\n      <div className=\"flex-shrink-0 flex items-center justify-center -my-2\">\r\n        <img\r\n          src=\"/mupcop-logo.png\"\r\n          alt=\"Mupcop logo\"\r\n          className=\"w-12 h-12 object-contain\"\r\n          width={82}\r\n          height={82}\r\n        />\r\n      </div>\r\n      <div className=\"flex-col\">\r\n        <p className=\"text-sm text-gray-700\">\r\n          <span className=\"text-xl font-bold text-black mb-1\">Mupcop</span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n);\r\n\r\nexport { Header, MonitoringPanel, Footer };"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1257, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1263, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ttigg/Documents/GitHub/TestWeb/src/components/ClientWrapper.js"],"sourcesContent":["// src/components/ClientWrapper.js\r\n'use client'\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport dynamic from 'next/dynamic'\r\n\r\n// Dynamically import MapComponent to avoid SSR issues\r\nconst MapComponent = dynamic(() => import('./MapComponents'), {\r\n  ssr: false,\r\n  loading: () => (\r\n    <div className=\"flex items-center justify-center h-full bg-gray-100\">\r\n      <div className=\"text-center\">\r\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-800 mb-2 mx-auto\"></div>\r\n        <p className=\"text-sm text-gray-600\">กำลังโหลดแผนที่...</p>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport function ClientWrapper({ onLocationSelect }) {\r\n  const [isClient, setIsClient] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setIsClient(true)\r\n  }, [])\r\n\r\n  if (!isClient) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-full bg-gray-100\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-gray-800 mb-2 mx-auto\"></div>\r\n          <p className=\"text-sm text-gray-600\">กำลังเตรียมแผนที่...</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return <MapComponent onLocationSelect={onLocationSelect} />\r\n}"],"names":[],"mappings":"AAAA,kCAAkC;;;;;AAGlC;AACA;AAHA;;;;AAKA,sDAAsD;AACtD,MAAM,eAAe,CAAA,GAAA,+JAAA,CAAA,UAAO,AAAD;;;;;;;;IACzB,KAAK;IACL,SAAS,kBACP,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAE,WAAU;kCAAwB;;;;;;;;;;;;;;;;;;AAMtC,SAAS,cAAc,EAAE,gBAAgB,EAAE;IAChD,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,YAAY;IACd,GAAG,EAAE;IAEL,IAAI,CAAC,UAAU;QACb,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAE,WAAU;kCAAwB;;;;;;;;;;;;;;;;;IAI7C;IAEA,qBAAO,8OAAC;QAAa,kBAAkB;;;;;;AACzC"}},
    {"offset": {"line": 1362, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1368, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/ttigg/Documents/GitHub/TestWeb/src/app/page.js"],"sourcesContent":["'use client'\r\n\r\n// src/app/page.js\r\nimport { useState } from 'react';\r\nimport { Header, MonitoringPanel, Footer } from '../components/MonitoringInterface'\r\nimport { ClientWrapper } from '../components/ClientWrapper'\r\n\r\nexport default function Home() {\r\n  const [selectedLocation, setSelectedLocation] = useState(null);\r\n\r\n  const handleLocationSelect = (locationData) => {\r\n    console.log('Location selected:', locationData);\r\n    setSelectedLocation(locationData);\r\n  };\r\n\r\n  const handleLocationClear = () => {\r\n    console.log('Location cleared');\r\n    setSelectedLocation(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen flex flex-col overflow-hidden\">\r\n      <Header />\r\n      <main className=\"flex-1 flex min-h-0 relative\">\r\n        <MonitoringPanel\r\n          selectedLocation={selectedLocation}\r\n          onLocationClear={handleLocationClear}\r\n        />\r\n        <div className=\"flex-1 relative\">\r\n          <ClientWrapper onLocationSelect={handleLocationSelect} />\r\n        </div>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  )\r\n}"],"names":[],"mappings":";;;;AAEA,kBAAkB;AAClB;AACA;AACA;AALA;;;;;AAOe,SAAS;IACtB,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEzD,MAAM,uBAAuB,CAAC;QAC5B,QAAQ,GAAG,CAAC,sBAAsB;QAClC,oBAAoB;IACtB;IAEA,MAAM,sBAAsB;QAC1B,QAAQ,GAAG,CAAC;QACZ,oBAAoB;IACtB;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,wIAAA,CAAA,SAAM;;;;;0BACP,8OAAC;gBAAK,WAAU;;kCACd,8OAAC,wIAAA,CAAA,kBAAe;wBACd,kBAAkB;wBAClB,iBAAiB;;;;;;kCAEnB,8OAAC;wBAAI,WAAU;kCACb,cAAA,8OAAC,kIAAA,CAAA,gBAAa;4BAAC,kBAAkB;;;;;;;;;;;;;;;;;0BAGrC,8OAAC,wIAAA,CAAA,SAAM;;;;;;;;;;;AAGb"}},
    {"offset": {"line": 1442, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}